{"version":3,"sources":["webpack:///./js/refs.js","webpack:///./js/progressBar.js","webpack:///./js/classRanger.js"],"names":["prevBtn","document","querySelector","nextBtn","finishBtn","stepValues","querySelectorAll","content","div","ranges","numbers","div2","ranges2","numbers2","refs","currentValue","addEventListener","classList","add","textContent","disabled","remove","innerText","location","reload","Ranger","rangeFrom","rangeBefore","numberFrom","numberBefore","this","min","max","step","value","changeParam","updateRange","updateNumber","start"],"mappings":"6OAAe,I,EAAA,GACbA,QAASC,SAASC,cAAc,YAChCC,QAASF,SAASC,cAAc,YAChCE,UAAWH,SAASC,cAAc,cAClCG,Y,EAAgBJ,SAASK,iBAAiB,c,+lBAC1CC,QAASN,SAASC,cAAc,YAEhCM,IAAKP,SAASC,cAAc,gBAC5BO,OAAQR,SAASK,iBAAiB,uBAClCI,QAAST,SAASK,iBAAiB,wBAEnCK,KAAMV,SAASC,cAAc,iBAC7BU,QAASX,SAASK,iBAAiB,qCACnCO,SAAUZ,SAASK,iBAAiB,uCCX9BH,EAAqDW,EAArDX,QAASC,EAA4CU,EAA5CV,UAAWJ,EAAiCc,EAAjCd,QAASK,EAAwBS,EAAxBT,WAAYE,EAAYO,EAAZP,QAG7CQ,EAAe,E,sKAEnBZ,EAAQa,iBAAiB,SAAS,WAEdX,EAAWU,EAAe,GAChCE,UAAUC,IAAI,aAE1BH,GAAgB,EAChBR,EAAQY,YAAR,sBAAqCJ,GACrCf,EAAQoB,UAAW,EAVH,IAYZL,IACFZ,EAAQiB,UAAW,EACnBhB,EAAUgB,UAAW,MAMzBpB,EAAQgB,iBAAiB,SAAS,WAEdX,EAAWU,EAAe,GAChCE,UAAUI,OAAO,aAC7BN,GAAgB,EAChBR,EAAQe,UAAR,sBAAmCP,GACnCZ,EAAQiB,UAAW,EACnBhB,EAAUgB,UAAW,EAEA,IAAjBL,IACFf,EAAQoB,UAAW,MAIvBhB,EAAUY,iBAAiB,SAAS,WAElCO,SAASC,Y,ICvCHf,EAAuCK,EAAvCL,OAAQC,EAA+BI,EAA/BJ,QAASE,EAAsBE,EAAtBF,QAASC,EAAaC,EAAbD,SAE5BY,E,WACJ,WAAYC,EAAWC,EAAaC,EAAYC,I,4FAAc,SAC5DC,KAAKJ,UAAYA,EACjBI,KAAKH,YAAcA,EACnBG,KAAKF,WAAaA,EAClBE,KAAKD,aAAeA,E,2DAGVE,EAAKC,EAAKC,GACpBH,KAAKJ,UAAUK,IAAMA,EACrBD,KAAKJ,UAAUM,IAAMA,EACrBF,KAAKJ,UAAUO,KAAOA,EAEtBH,KAAKH,YAAYI,IAAMA,EACvBD,KAAKH,YAAYK,IAAMA,EACvBF,KAAKH,YAAYM,KAAOA,EAExBH,KAAKF,WAAWG,IAAMA,EACtBD,KAAKF,WAAWI,IAAMA,EACtBF,KAAKF,WAAWK,KAAOA,EAEvBH,KAAKD,aAAaE,IAAMA,EACxBD,KAAKD,aAAaG,IAAMA,EACxBF,KAAKD,aAAaI,KAAOA,I,oCAEb,WACZH,KAAKF,WAAWZ,iBAAiB,UAAU,WACzC,IAAIY,GAAc,EAAKA,WAAWM,MAClC,EAAKR,UAAUQ,MAAQN,KAEzBE,KAAKD,aAAab,iBAAiB,UAAU,WAC3C,IAAIa,GAAgB,EAAKA,aAAaK,MACtC,EAAKP,YAAYO,MAAQL,O,qCAGd,WACbC,KAAKJ,UAAUV,iBAAiB,UAAU,WACxC,IAAIU,GAAa,EAAKA,UAAUQ,MAEhC,EAAKN,WAAWM,MAAQR,KAE1BI,KAAKH,YAAYX,iBAAiB,UAAU,WAC1C,IAAIW,GAAe,EAAKA,YAAYO,MAEpC,EAAKL,aAAaK,MAAQP,O,4BAGxBI,EAAKC,EAAKC,GACdH,KAAKK,YAAYJ,EAAKC,EAAKC,GAC3BH,KAAKM,cACLN,KAAKO,oB,gCAIQ,IAAIZ,EAAOhB,EAAO,GAAIA,EAAO,GAAIC,EAAQ,GAAIA,EAAQ,IAE7D4B,MAAM,GAAI,GAAI,IAEL,IAAIb,EAAOb,EAAQ,GAAIA,EAAQ,GAAIC,EAAS,GAAIA,EAAS,IACjEyB,MAAM,EAAG,EAAG,K","file":"main.88f8fdc6a675f2781157.js","sourcesContent":["export default {\n  prevBtn: document.querySelector('.prevBtn'),\n  nextBtn: document.querySelector('.nextBtn'),\n  finishBtn: document.querySelector('.finishBtn'),\n  stepValues: [...document.querySelectorAll('.stepValue')],\n  content: document.querySelector('.content'),\n\n  div: document.querySelector('.price-range'),\n  ranges: document.querySelectorAll('input[type=\"range\"]'),\n  numbers: document.querySelectorAll('input[type=\"number\"]'),\n\n  div2: document.querySelector('.price-range2'),\n  ranges2: document.querySelectorAll('.price-range2 input[type=\"range\"]'),\n  numbers2: document.querySelectorAll('.price-range2 input[type=\"number\"]'),\n};\n","import refs from './refs.js';\r\n\r\nconst { nextBtn, finishBtn, prevBtn, stepValues, content } = refs;\r\n\r\nconst MAX_VALUE = 4; // МАКС КОЛ-ВО ЭЛЕМЕНТОВ В МАССИВЕ (КОЛ-ВО КНОПОК)\r\nlet currentValue = 1;\r\n\r\nnextBtn.addEventListener('click', () => {\r\n  // console.log('next');\r\n  let currentStep = stepValues[currentValue - 1];\r\n  currentStep.classList.add('completed');\r\n\r\n  currentValue += 1;\r\n  content.textContent = `Текущий шаг ${currentValue}`;\r\n  prevBtn.disabled = false;\r\n\r\n  if (currentValue === MAX_VALUE) {\r\n    nextBtn.disabled = true;\r\n    finishBtn.disabled = false;\r\n  }\r\n\r\n  // console.log(currentStep);\r\n});\r\n\r\nprevBtn.addEventListener('click', () => {\r\n  // console.log('previous');\r\n  let currentStep = stepValues[currentValue - 2]; //ПОЛУЧАЕМ ПРЕДЫДУЩИЙ ИНДЕКС В МАССИВЕ ДЛЯ КНОПКИ 'НАЗАД'\r\n  currentStep.classList.remove('completed');\r\n  currentValue -= 1;\r\n  content.innerText = `Текущий шаг ${currentValue}`;\r\n  nextBtn.disabled = false;\r\n  finishBtn.disabled = true;\r\n\r\n  if (currentValue === 1) {\r\n    prevBtn.disabled = true;\r\n  }\r\n});\r\n\r\nfinishBtn.addEventListener('click', () => {\r\n  // console.log('finish');\r\n  location.reload(); //СБРОСИТЬ К НАЧАЛЬНОМУ СОСТОЯНИЮ ДО ОБРАБОТКИ СОБЫТИЙ\r\n});\r\n","import refs from './refs.js';\r\nconst { ranges, numbers, ranges2, numbers2 } = refs;\r\n\r\nclass Ranger {\r\n  constructor(rangeFrom, rangeBefore, numberFrom, numberBefore) {\r\n    this.rangeFrom = rangeFrom;\r\n    this.rangeBefore = rangeBefore;\r\n    this.numberFrom = numberFrom;\r\n    this.numberBefore = numberBefore;\r\n  }\r\n\r\n  changeParam(min, max, step) {\r\n    this.rangeFrom.min = min;\r\n    this.rangeFrom.max = max;\r\n    this.rangeFrom.step = step;\r\n\r\n    this.rangeBefore.min = min;\r\n    this.rangeBefore.max = max;\r\n    this.rangeBefore.step = step;\r\n\r\n    this.numberFrom.min = min;\r\n    this.numberFrom.max = max;\r\n    this.numberFrom.step = step;\r\n\r\n    this.numberBefore.min = min;\r\n    this.numberBefore.max = max;\r\n    this.numberBefore.step = step;\r\n  }\r\n  updateRange() {\r\n    this.numberFrom.addEventListener('change', () => {\r\n      let numberFrom = +this.numberFrom.value;\r\n      this.rangeFrom.value = numberFrom;\r\n    });\r\n    this.numberBefore.addEventListener('change', () => {\r\n      let numberBefore = +this.numberBefore.value;\r\n      this.rangeBefore.value = numberBefore;\r\n    });\r\n  }\r\n  updateNumber() {\r\n    this.rangeFrom.addEventListener('change', () => {\r\n      let rangeFrom = +this.rangeFrom.value;\r\n\r\n      this.numberFrom.value = rangeFrom;\r\n    });\r\n    this.rangeBefore.addEventListener('change', () => {\r\n      let rangeBefore = +this.rangeBefore.value;\r\n\r\n      this.numberBefore.value = rangeBefore;\r\n    });\r\n  }\r\n  start(min, max, step) {\r\n    this.changeParam(min, max, step);\r\n    this.updateRange();\r\n    this.updateNumber();\r\n  }\r\n}\r\n\r\nconst newRange = new Ranger(ranges[0], ranges[1], numbers[0], numbers[1]);\r\n// console.log(newRange);\r\nnewRange.start(10, 50, 10);\r\n\r\nconst newRange2 = new Ranger(ranges2[0], ranges2[1], numbers2[0], numbers2[1]);\r\nnewRange2.start(0, 5, 1);\r\n"],"sourceRoot":""}